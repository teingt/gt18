{"version":3,"sources":["serviceWorker.js","Pages/i18n.js","Components/Input.js","Components/ButtonWithProgress.js","shared/ApiProgress.js","redux/Constants.js","api/apiCalls.js","redux/authActions.js","Pages/UserSignupPage.js","Pages/LoginPage.js","Components/LanguageSelector.js","assets/profile.png","Components/ProfileImageWithDefault.js","Components/Modal.js","Components/HoaxView.js","Components/Spinner.js","Components/HoaxFeed.js","Components/AutoUploadImage.js","Components/HoaxSubmit.js","Components/UserListItem.js","Components/UserList.js","Pages/HomePage.js","Components/ProfileCard.js","Pages/UserPage.js","assets/hoaxify.png","Components/TopBar.js","container/App.js","redux/authReducer.js","redux/configureStore.js","index.js"],"names":["Boolean","window","location","hostname","match","i18n","use","initReactI18next","init","resources","en","translations","Next","Previous","Save","Cancel","tr","fallbackLng","ns","defaultNS","keySeparator","interpolation","escapeValue","formatSeparator","react","wait","register","number","index","Input","props","label","error","name","onChange","type","defaultValue","className","undefined","ButtonWithProgress","onClick","pendingApiCall","disabled","text","useApiProgress","apiMethod","apiPath","strictPath","useState","setPendingApiCall","useEffect","requestInterceptor","responseInterceptor","updateApiCallFor","method","url","inProgress","startsWith","axios","interceptors","request","response","config","eject","LOGOUT_SUCCESS","LOGIN_SUCCESS","UPDATE_SUCCESS","getUsers","page","size","get","setAuthorizationHeader","isLoggedIn","token","authorizationHeaderValue","defaults","headers","getUser","username","updateUser","body","put","postHoax","hoax","post","getHoaxes","path","getOldHoaxes","id","getNewHoaxCount","getNewHoaxes","postHoaxAttachment","attachment","deleteHoax","delete","deleteUser","logoutSuccess","dispatch","a","ACTIONS","loginSuccess","authState","payload","updateSuccess","displayName","image","loginHandler","credentials","creds","data","user","password","signupHandler","UserSignupPage","passwordRepeatError","passwordRepeat","form","setForm","errors","setErrors","useDispatch","event","target","value","previousErrors","previousForm","onClickSignup","preventDefault","history","push","validationErrors","t","useTranslation","usernameError","displayNameError","passwordError","pendingApiCallSignup","pendingApiCallLogin","LoginPage","setUsername","setPassword","setError","onClickLogin","message","buttonEnabled","LanguageSelector","onChangeLanguage","language","changeLanguage","src","alt","style","cursor","ProfileImageWithDefault","tempimage","imageSource","defaultPicture","onError","Modal","visible","onClickCancel","onClickOk","title","okButton","backgroundColor","HoaxView","loggedInUser","useSelector","store","onDeleteHoax","content","timestamp","fileAttachment","modalVisible","setModalVisible","onClickDelete","formatted","format","ownedByLoggedInUser","width","height","to","fileType","Spinner","HoaxFeed","last","hoaxPage","setHoaxPage","newHoaxCount","setNewHoaxCount","useParams","initialHoaxLoadProgress","lastHoaxId","firstHoaxId","length","lastHoaxIndex","oldHoaxPath","loadOldHoaxesProgress","newHoaxPath","loadNewHoaxesProgress","looper","setInterval","count","clearInterval","previousHoaxPage","loadHoaxes","loadOldHoaxes","loadNewHoaxes","onDeleteHoaxSuccess","filter","map","AutoUploadImage","uploading","position","opacity","HoaxSubmit","focused","setFocused","setHoax","newImage","setNewImage","attachmentId","setAttachmentId","pendingFileUpload","onClickHoaxify","uploadFile","file","FormData","append","textAreaClass","rows","onFocus","files","fileReader","FileReader","onloadend","result","readAsDataURL","UserListItem","UserList","setPage","loadFailure","setLoadFailure","loadUsers","users","first","actionDiv","previousPage","nextPage","HomePage","ProfileCard","inEditMode","setInEditMode","updatedDisplayName","setUpdatedDisplayName","loggedInUsername","pathUsername","setUser","editable","setEditable","setValidationErrors","useHistory","previousValidationErrors","pendingApiCallDeleteUser","onClickSave","split","onClickDeleteUser","imageError","UserPage","notFound","setNotFound","loadUser","fontSize","TopBar","menuArea","useRef","menuVisible","setMenuVisible","document","addEventListener","menuClickTracker","removeEventListener","current","contains","links","dropDownClass","ref","logo","App","exact","component","defaultState","authReducer","state","action","secureLS","SecureLS","initialState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","subscribe","newState","getState","set","configureStore","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.0630ce13.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.0/8 are considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  export function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                );\r\n  \r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n      headers: { 'Service-Worker': 'script' }\r\n    })\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready\r\n        .then(registration => {\r\n          registration.unregister();\r\n        })\r\n        .catch(error => {\r\n          console.error(error.message);\r\n        });\r\n    }\r\n  }","import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\nimport { register } from 'timeago.js';\r\n\r\ni18n.use(initReactI18next).init({\r\n    resources: {\r\n        en: {\r\n            translations: {\r\n                'Sign Up': 'Sign Up',\r\n                'Password mismatch': 'Password mismatch',\r\n                'Username': 'Username',\r\n                'Display Name': 'Display Name',\r\n                'Password': 'Password',\r\n                'Password Repeat': 'Password Repeat',\r\n                'Login': 'Login',\r\n                'Logout': 'Logout',\r\n                'Users': 'Users',\r\n                Next : 'next >',\r\n                Previous: '< previous',\r\n                'Load Failure': 'Load Failure',\r\n                'User Not Found': 'User Not Found',\r\n                'Edit': 'Edit',\r\n                'Change Display Name': 'Change Display Name',\r\n                Save: 'Save',\r\n                Cancel: 'Cancel',\r\n                'My Profile': 'My Profile',\r\n                'There are no hoaxes': 'There are no hoaxes',\r\n                'Load old hoaxes': 'Load old hoaxes',\r\n                'There are new hoaxes': 'There are new hoaxes',\r\n                'Delete Hoax': 'Delete Hoax',\r\n                'Are you sure to delete hoax?': 'Are you sure to delete hoax?',\r\n                'Delete My Account': 'Delete My Account',\r\n                'Are you sure to delete your account?': 'Are you sure to delete your account?'\r\n\r\n            }\r\n        },\r\n        tr: {\r\n            translations:{\r\n                'Sign Up': 'Kayıt Ol',\r\n                'Password mismatch': 'Aynı şifreyi giriniz',\r\n                'Username': 'Kullanıcı Adı',\r\n                'Display Name': 'Tercih Edilen İsim',\r\n                'Password': 'Şifre',\r\n                'Password Repeat': 'Şifreyi Tekrarla',\r\n                'Login': 'Sisteme Gir',\r\n                'Logout': 'Çık',\r\n                'Users': 'Kullanıcılar',\r\n                Next: 'sonraki >',\r\n                Previous: '< önceki',\r\n                'Load Failure':'Liste Alınamadı',\r\n                'User Not Found': 'Kullanıcı Bulunamadı',\r\n                'Edit': 'Düzenle',\r\n                'Change Display Name': 'Görünür İsminizi Değiştirin',\r\n                Save: 'Kaydet',\r\n                Cancel: 'İptal Et',\r\n                'My Profile': 'Hesabım',\r\n                'There are no hoaxes': 'Hoax Bulunamadı',\r\n                'Load old hoaxes': 'Geçmiş Hoaxları Getir',\r\n                'There are new hoaxes': 'Yeni Hoaxlar Var',\r\n                'Delete Hoax': `Hoax'u Sil`,\r\n                'Are you sure to delete hoax?': `Hoax'u silmek istediğinizden emin misiniz?`,\r\n                'Delete My Account': 'Hesabımı Sil',\r\n                'Are you sure to delete your account?': 'Hesabınızı silmek istediğinizden emin misiniz?'\r\n            }\r\n        }\r\n    },\r\n    fallbackLng: 'tr',\r\n    ns: ['translations'],\r\n    defaultNS: 'translations',\r\n    keySeparator: false,\r\n    interpolation: {\r\n        escapeValue: false,\r\n        formatSeparator: ','\r\n    },\r\n    react:{\r\n        wait: true\r\n    }\r\n});\r\n\r\nconst timeageTR = (number, index) => {\r\n    return [\r\n      ['az önce', 'şimdi'],\r\n      ['%s saniye önce', '%s saniye içinde'],\r\n      ['1 dakika önce', '1 dakika içinde'],\r\n      ['%s dakika önce', '%s dakika içinde'],\r\n      ['1 saat önce', '1 saat içinde'],\r\n      ['%s saat önce', '%s saat içinde'],\r\n      ['1 gün önce', '1 gün içinde'],\r\n      ['%s gün önce', '%s gün içinde'],\r\n      ['1 hafta önce', '1 hafta içinde'],\r\n      ['%s hafta önce', '%s hafta içinde'],\r\n      ['1 ay önce', '1 ay içinde'],\r\n      ['%s ay önce', '%s ay içinde'],\r\n      ['1 yıl önce', '1 yıl içinde'],\r\n      ['%s yıl önce', '%s yıl içinde'],\r\n    ][index] \r\n  }\r\n  register('tr', timeageTR)\r\n\r\nexport default i18n;","import React from 'react';\r\n\r\nconst Input = props => {\r\n    const {label, error, name, onChange, type, defaultValue} = props;\r\n    let className = 'form-control';\r\n\r\n    if (type === 'file') {\r\n        className += '-file'\r\n    }\r\n\r\n    if (error !== undefined) {\r\n        className += ' is-invalid';\r\n    }\r\n\r\n    return(\r\n        <div className= \"form-group\">\r\n        <label>{label}</label>\r\n        <input className={className} name= {name} onChange={onChange} type= {type} defaultValue={defaultValue}/>\r\n        <div className=\"invalid-feedback\">{props.error}</div>\r\n        </div>\r\n\r\n\r\n    );\r\n};\r\nexport default Input;"," import React from 'react';\r\n\r\nconst ButtonWithProgress = props => {\r\n  const { onClick, pendingApiCall, disabled, text, className } = props;\r\n\r\n  return (\r\n    <button className={className || 'btn btn-primary'} onClick={onClick} disabled={disabled}>\r\n      {pendingApiCall && <span className=\"spinner-border spinner-border-sm\"></span>} {text}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ButtonWithProgress;","import { useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\n\r\nexport const useApiProgress = ( apiMethod, apiPath , strictPath) => {\r\n    const[pendingApiCall, setPendingApiCall] = useState(false)\r\n\r\n    useEffect(() => {\r\n       let requestInterceptor, responseInterceptor;\r\n       \r\n       const updateApiCallFor = (method, url, inProgress) => {\r\n        if(method !== apiMethod){\r\n            return;\r\n        }\r\n        if(strictPath && url === apiPath){\r\n            setPendingApiCall(inProgress);        \r\n        } else if (!strictPath && url.startsWith(apiPath)) {\r\n            setPendingApiCall(inProgress);\r\n          }\r\n    };\r\n\r\n       const  registerInterceptors = () => {\r\n            requestInterceptor = axios.interceptors.request.use(request => {\r\n                const {url, method} = request;\r\n                updateApiCallFor(method, url, true);\r\n                return request;\r\n            });\r\n        \r\n            responseInterceptor = axios.interceptors.response.use(\r\n            response => {\r\n                const{ url, method } = response.config;\r\n                updateApiCallFor(method, url, false);\r\n                return response;\r\n            },  \r\n            error => {        \r\n                const{ url, method } = error.config;\r\n                updateApiCallFor(method, url, false);\r\n                throw error;\r\n            }\r\n          );\r\n        };\r\n        const unregisterInterceptors = () => {\r\n            axios.interceptors.request.eject(requestInterceptor);\r\n            axios.interceptors.response.eject(responseInterceptor);  \r\n        };\r\n\r\n        registerInterceptors();\r\n\r\n        return function unmount() {\r\n            unregisterInterceptors();\r\n        };\r\n\r\n    }, [apiPath, apiMethod, strictPath]);\r\n\r\n    return pendingApiCall;\r\n};\r\n\r\n","export const LOGOUT_SUCCESS = 'logout-success';\r\nexport const LOGIN_SUCCESS =  'login-success';\r\nexport const UPDATE_SUCCESS = 'update-success';","import axios from 'axios';\r\n\r\nexport const signup = body => {\r\n  return axios.post('/api/1.0/users', body);\r\n};\r\n\r\nexport const login = creds => {\r\n  return axios.post('/api/1.0/auth', creds);\r\n};\r\n\r\nexport const logout = () => {\r\n  return axios.post('/api/1.0/logout');\r\n}\r\n\r\nexport const changeLanguage = language => {\r\n  axios.defaults.headers['accept-language'] = language;\r\n};\r\n\r\nexport const getUsers = (page = 0, size = 3) => {\r\n  return axios.get(`/api/1.0/users?page=${page}&size=${size}`);\r\n};\r\n\r\nexport const setAuthorizationHeader = ({ isLoggedIn, token }) => {\r\n  if (isLoggedIn) {\r\n    const authorizationHeaderValue = `Bearer ${token}`;\r\n    axios.defaults.headers['Authorization'] = authorizationHeaderValue;\r\n  } else {\r\n    delete axios.defaults.headers['Authorization'];\r\n  }\r\n};\r\n\r\nexport const getUser = username => {\r\n  return axios.get(`/api/1.0/users/${username}`);\r\n};\r\n\r\nexport const updateUser = (username, body) => {\r\n  return axios.put(`/api/1.0/users/${username}`, body);\r\n};\r\n\r\nexport const postHoax = hoax => {\r\n  return axios.post('/api/1.0/hoaxes', hoax);\r\n};\r\n\r\nexport const getHoaxes = (username, page = 0) => {\r\n  const path = username ? `/api/1.0/users/${username}/hoaxes?page=` : '/api/1.0/hoaxes?page=';\r\n  return axios.get(path + page);\r\n};\r\n\r\nexport const getOldHoaxes = (id, username) => {\r\n  const path = username ? `/api/1.0/users/${username}/hoaxes/${id}` : `/api/1.0/hoaxes/${id}`;\r\n  return axios.get(path);\r\n};\r\n\r\nexport const getNewHoaxCount = (id, username) => {\r\n  const path = username ? `/api/1.0/users/${username}/hoaxes/${id}?count=true` : `/api/1.0/hoaxes/${id}?count=true`;\r\n  return axios.get(path);\r\n};\r\n\r\nexport const getNewHoaxes = (id, username) => {\r\n  const path = username ? `/api/1.0/users/${username}/hoaxes/${id}?direction=after` : `/api/1.0/hoaxes/${id}?direction=after`;\r\n  return axios.get(path);\r\n};\r\n\r\nexport const postHoaxAttachment = attachment => {\r\n  return axios.post('/api/1.0/hoax-attachments', attachment);\r\n};\r\n\r\nexport const deleteHoax = id => {\r\n  return axios.delete(`/api/1.0/hoaxes/${id}`);\r\n};\r\n\r\nexport const deleteUser = username => {\r\n  return axios.delete(`/api/1.0/users/${username}`);\r\n};","import * as ACTIONS from './Constants';\r\nimport { login, signup, logout } from '../api/apiCalls';\r\n\r\nexport const logoutSuccess = () => {\r\n  return async function(dispatch){\r\n    try {\r\n      await logout();\r\n    } catch (err){\r\n\r\n    }\r\n    dispatch({\r\n      type: ACTIONS.LOGOUT_SUCCESS\r\n    })\r\n  }\r\n};\r\n\r\nexport const loginSuccess = authState => {\r\n  return {\r\n    type: ACTIONS.LOGIN_SUCCESS,\r\n    payload: authState\r\n  };\r\n};\r\n\r\nexport const updateSuccess = ({ displayName, image }) => {\r\n  return {\r\n    type: ACTIONS.UPDATE_SUCCESS,\r\n    payload: {\r\n      displayName,\r\n      image\r\n    }\r\n  };\r\n};\r\n\r\nexport const loginHandler = credentials => {\r\n  return async function(dispatch) {\r\n    const response = await login(credentials);\r\n    const authState = {\r\n      ...response.data.user,\r\n      password: credentials.password,\r\n      token: response.data.token\r\n    };\r\n    dispatch(loginSuccess(authState));\r\n    return response;\r\n  };\r\n};\r\n\r\nexport const signupHandler = user => {\r\n  return async function(dispatch) {\r\n    const response = await signup(user);\r\n    await dispatch(loginHandler(user));\r\n    return response;\r\n  };\r\n};","import React, {useState} from 'react';\r\nimport Input from '../Components/Input';\r\nimport { useTranslation } from 'react-i18next';\r\nimport ButtonWithProgress from '../Components/ButtonWithProgress';\r\nimport { useApiProgress } from '../shared/ApiProgress';\r\nimport { useDispatch } from 'react-redux';\r\nimport { signupHandler } from '../redux/authActions';\r\n\r\n\r\nconst UserSignupPage = (props) => {\r\n    const [form, setForm] = useState({\r\n        username: null, \r\n        displayName: null,\r\n        password:null,\r\n        passwordRepeat:null,\r\n    });\r\n    const [errors,setErrors] = useState({});\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const onChange = (event) =>{\r\n        const {name , value} = event.target;\r\n        setErrors((previousErrors)=> ({...previousErrors, [name]: undefined }) );\r\n        setForm((previousForm) => ({...previousForm,[name]: value}));\r\n    };\r\n    const onClickSignup = async event =>{\r\n        event.preventDefault();\r\n\r\n        const { history } = props;\r\n        const { push } = history;\r\n\r\n        const { username, displayName, password} = form;\r\n        const body ={\r\n            username,\r\n            displayName,\r\n            password\r\n        };\r\n\r\n        try {\r\n        await dispatch(signupHandler(body));\r\n        push('/');\r\n        } catch (error) {\r\n            if(error.response.data.validationErrors){\r\n                setErrors(error.response.data.validationErrors);\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n        const { t } = useTranslation();\r\n\r\n        const { username: usernameError, displayName: displayNameError, password: passwordError } = errors;\r\n        const  pendingApiCallSignup  = useApiProgress('post','/api/1.0/users');\r\n        const pendingApiCallLogin = useApiProgress('post','/api/1.0/auth');\r\n\r\n        const pendingApiCall = pendingApiCallSignup || pendingApiCallLogin;\r\n\r\n        let passwordRepeatError;\r\n        if(form.password !== form.passwordRepeat){\r\n            passwordRepeatError = t('Password mismatch');\r\n        }\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form>\r\n                    \r\n                    <h1 className=\"text-center\">{t('Sign Up')}</h1>\r\n                    <Input name=\"username\" label={t('Username')} error={usernameError} onChange={onChange}/>\r\n                    <Input name=\"displayName\" label={t('Display Name')} error={displayNameError} onChange={onChange}/>\r\n                    <Input name=\"password\" label={t('Password')} error={passwordError} onChange={onChange} type=\"password\"/>\r\n                    <Input name=\"passwordRepeat\" label={t('Password Repeat')} error={passwordRepeatError} onChange={onChange} type=\"password\" />\r\n                        <div className=\"text-center\">\r\n                            <ButtonWithProgress onClick={onClickSignup} \r\n                            disabled={pendingApiCall || passwordRepeatError !== undefined} \r\n                            pendingApiCall= {pendingApiCall}\r\n                            text = {t('Sign Up')} />\r\n                        </div>                       \r\n                </form>\r\n\r\n\r\n            </div>\r\n        );\r\n    \r\n}\r\n\r\nexport default UserSignupPage; ","import React, { useState, useEffect } from 'react';\r\nimport Input from '../Components/Input';\r\nimport { useTranslation } from 'react-i18next';\r\nimport ButtonWithProgress from '../Components/ButtonWithProgress';\r\nimport { useApiProgress } from '../shared/ApiProgress';\r\nimport { useDispatch } from 'react-redux';\r\nimport { loginHandler } from '../redux/authActions';\r\n\r\nconst LoginPage = props => {\r\n  const [username, setUsername] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [error, setError] = useState();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    setError(undefined);\r\n  }, [username, password]);\r\n\r\n  const onClickLogin = async event => {\r\n    event.preventDefault();\r\n    const creds = {\r\n      username,\r\n      password\r\n    };\r\n\r\n    const { history } = props;\r\n    const { push } = history;\r\n\r\n    setError(undefined);\r\n    try {\r\n      await dispatch(loginHandler(creds));\r\n      push('/');\r\n    } catch (apiError) {\r\n      setError(apiError.response.data.message);\r\n    }\r\n  };\r\n\r\n  const { t } = useTranslation();\r\n\r\n  const pendingApiCall = useApiProgress('post', '/api/1.0/auth');\r\n\r\n  const buttonEnabled = username && password;\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form>\r\n        <h1 className=\"text-center\">{t('Login')}</h1>\r\n        <Input label={t('Username')} onChange={event => setUsername(event.target.value)} />\r\n        <Input label={t('Password')} type=\"password\" onChange={event => setPassword(event.target.value)} />\r\n        {error && <div className=\"alert alert-danger\">{error}</div>}\r\n        <div className=\"text-center\">\r\n          <ButtonWithProgress onClick={onClickLogin} disabled={!buttonEnabled || pendingApiCall} pendingApiCall={pendingApiCall} text={t('Login')} />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;","import React from 'react';\r\nimport { useTranslation  } from 'react-i18next';\r\nimport { changeLanguage  } from '../api/apiCalls';\r\n\r\nconst LanguageSelector = (props) => {\r\n    const { i18n } = useTranslation();\r\n    \r\n    const onChangeLanguage= language => {\r\n        i18n.changeLanguage(language);\r\n        changeLanguage(language);\r\n\r\n    };\r\n\r\n    return(\r\n        <div className = \"container\"  >\r\n        <img src=\"https://www.countryflags.io/tr/flat/24.png\" alt= \"Turkish Flag\" onClick={() => onChangeLanguage('tr')} style={{cursor: 'pointer'}}></img>   \r\n        <img src=\"https://www.countryflags.io/us/flat/24.png\" alt= \"USA Flag\" onClick={() => onChangeLanguage('en')} style={{cursor: 'pointer'}}></img>   \r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default LanguageSelector;","export default __webpack_public_path__ + \"static/media/profile.06c30927.png\";","import React from 'react';\r\nimport defaultPicture from '../assets/profile.png';\r\n\r\nconst ProfileImageWithDefault = props => {\r\n\r\n    const { image, tempimage } = props;\r\n\r\n    let imageSource = defaultPicture;\r\n    if(image) {\r\n        imageSource = 'images/profile/' + image;\r\n    }\r\n    return(\r\n    <img alt={`Profile`} src={tempimage || imageSource} {...props} \r\n    onError= { event => {\r\n        event.target.src = defaultPicture\r\n    }} \r\n    />\r\n    );\r\n};\r\n\r\nexport default ProfileImageWithDefault;","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport ButtonWithProgress from './ButtonWithProgress';\r\n\r\nconst Modal = props => {\r\n  const { visible, onClickCancel, message, onClickOk, pendingApiCall, title, okButton } = props;\r\n  const { t } = useTranslation();\r\n\r\n  let className = 'modal fade';\r\n  if (visible) {\r\n    className += ' show d-block';\r\n  }\r\n\r\n  return (\r\n    <div className={className} style={{ backgroundColor: '#000000b0' }}>\r\n      <div className=\"modal-dialog\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title\">{title}</h5>\r\n          </div>\r\n          <div className=\"modal-body\">{message}</div>\r\n          <div className=\"modal-footer\">\r\n            <button className=\"btn btn-secondary\" disabled={pendingApiCall} onClick={onClickCancel}>\r\n              {t('Cancel')}\r\n            </button>\r\n            <ButtonWithProgress\r\n              className=\"btn btn-danger\"\r\n              onClick={onClickOk}\r\n              pendingApiCall={pendingApiCall}\r\n              disabled={pendingApiCall}\r\n              text={okButton}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;","\r\nimport React, { useState } from 'react';\r\nimport ProfileImageWithDefault from './ProfileImageWithDefault';\r\nimport { Link } from 'react-router-dom';\r\nimport { format } from 'timeago.js';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useSelector } from 'react-redux';\r\nimport { deleteHoax } from '../api/apiCalls';\r\nimport Modal from './Modal';\r\nimport { useApiProgress } from '../shared/ApiProgress';\r\n\r\nconst HoaxView = props => {\r\n  const loggedInUser = useSelector(store => store.username);\r\n  const { hoax, onDeleteHoax } = props;\r\n  const { user, content, timestamp, fileAttachment, id } = hoax;\r\n  const { username, displayName, image } = user;\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n\r\n  const pendingApiCall = useApiProgress('delete', `/api/1.0/hoaxes/${id}`, true);\r\n\r\n  const { t, i18n } = useTranslation();\r\n\r\n  const onClickDelete = async () => {\r\n    await deleteHoax(id);\r\n    onDeleteHoax(id);\r\n  };\r\n\r\n  const onClickCancel = () => {\r\n    setModalVisible(false);\r\n  };\r\n\r\n  const formatted = format(timestamp, i18n.language);\r\n\r\n  const ownedByLoggedInUser = loggedInUser === username;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"card p-1\">\r\n        <div className=\"d-flex\">\r\n          <ProfileImageWithDefault image={image} width=\"32\" height=\"32\" className=\"rounded-circle m-1\" />\r\n          <div className=\"flex-fill m-auto pl-2\">\r\n            <Link to={`/user/${username}`} className=\"text-dark\">\r\n              <h6 className=\"d-inline\">\r\n                {displayName}@{username}\r\n              </h6>\r\n              <span> - </span>\r\n              <span>{formatted}</span>\r\n            </Link>\r\n          </div>\r\n          {ownedByLoggedInUser && (\r\n            <button className=\"btn btn-delete-link btn-sm\" onClick={() => setModalVisible(true)}>\r\n              <i className=\"material-icons\">delete_outline</i>\r\n            </button>\r\n          )}\r\n        </div>\r\n        <div className=\"pl-5\">{content}</div>\r\n        {fileAttachment && (\r\n          <div className=\"pl-5\">\r\n            {fileAttachment.fileType.startsWith('image') && (\r\n              <img className=\"img-fluid\" src={'images/attachments/' + fileAttachment.name} alt={content} />\r\n            )}\r\n            {!fileAttachment.fileType.startsWith('image') && <strong>Hoax has unknown attachment</strong>}\r\n          </div>\r\n        )}\r\n      </div>\r\n      <Modal\r\n        visible={modalVisible}\r\n        title={t('Delete Hoax')}\r\n        onClickCancel={onClickCancel}\r\n        onClickOk={onClickDelete}\r\n        message={\r\n          <div>\r\n            <div>\r\n              <strong>{t('Are you sure to delete hoax?')}</strong>\r\n            </div>\r\n            <span>{content}</span>\r\n          </div>\r\n        }\r\n        pendingApiCall={pendingApiCall}\r\n        okButton={t('Delete Hoax')}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HoaxView;","import React from 'react';\r\n\r\nconst Spinner = () => {\r\n    return(\r\n        <div className=\"d-flex justify-content-center\">\r\n        <div className=\"spinner-border text-black-50\" >\r\n        <span className=\"sr-only\">Loading...</span>\r\n        </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Spinner;","  \r\nimport React, { useState, useEffect } from 'react';\r\nimport { getHoaxes, getOldHoaxes, getNewHoaxCount, getNewHoaxes } from '../api/apiCalls';\r\nimport { useTranslation } from 'react-i18next';\r\nimport HoaxView from './HoaxView';\r\nimport { useApiProgress } from '../shared/ApiProgress';\r\nimport Spinner from './Spinner';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst HoaxFeed = () => {\r\n  const [hoaxPage, setHoaxPage] = useState({ content: [], last: true, number: 0 });\r\n  const [newHoaxCount, setNewHoaxCount] = useState(0);\r\n  const { t } = useTranslation();\r\n  const { username } = useParams();\r\n\r\n  const path = username ? `/api/1.0/users/${username}/hoaxes?page=` : '/api/1.0/hoaxes?page=';\r\n  const initialHoaxLoadProgress = useApiProgress('get', path);\r\n\r\n  let lastHoaxId = 0;\r\n  let firstHoaxId = 0;\r\n  if (hoaxPage.content.length > 0) {\r\n    firstHoaxId = hoaxPage.content[0].id;\r\n\r\n    const lastHoaxIndex = hoaxPage.content.length - 1;\r\n    lastHoaxId = hoaxPage.content[lastHoaxIndex].id;\r\n  }\r\n  const oldHoaxPath = username ? `/api/1.0/users/${username}/hoaxes/${lastHoaxId}` : `/api/1.0/hoaxes/${lastHoaxId}`;\r\n  const loadOldHoaxesProgress = useApiProgress('get', oldHoaxPath, true);\r\n\r\n  const newHoaxPath = username\r\n    ? `/api/1.0/users/${username}/hoaxes/${firstHoaxId}?direction=after`\r\n    : `/api/1.0/hoaxes/${firstHoaxId}?direction=after`;\r\n\r\n  const loadNewHoaxesProgress = useApiProgress('get', newHoaxPath, true);\r\n\r\n  useEffect(() => {\r\n    const getCount = async () => {\r\n      const response = await getNewHoaxCount(firstHoaxId, username);\r\n      setNewHoaxCount(response.data.count);\r\n    };\r\n    let looper = setInterval(getCount, 5000);\r\n    return function cleanup() {\r\n      clearInterval(looper);\r\n    };\r\n  }, [firstHoaxId, username]);\r\n\r\n  useEffect(() => {\r\n    const loadHoaxes = async page => {\r\n      try {\r\n        const response = await getHoaxes(username, page);\r\n        setHoaxPage(previousHoaxPage => ({\r\n          ...response.data,\r\n          content: [...previousHoaxPage.content, ...response.data.content]\r\n        }));\r\n      } catch (error) {}\r\n    };\r\n    loadHoaxes();\r\n  }, [username]);\r\n\r\n  const loadOldHoaxes = async () => {\r\n    const response = await getOldHoaxes(lastHoaxId, username);\r\n    setHoaxPage(previousHoaxPage => ({\r\n      ...response.data,\r\n      content: [...previousHoaxPage.content, ...response.data.content]\r\n    }));\r\n  };\r\n\r\n  const loadNewHoaxes = async () => {\r\n    const response = await getNewHoaxes(firstHoaxId, username);\r\n    setHoaxPage(previousHoaxPage => ({\r\n      ...previousHoaxPage,\r\n      content: [...response.data, ...previousHoaxPage.content]\r\n    }));\r\n    setNewHoaxCount(0);\r\n  };\r\n\r\n  const onDeleteHoaxSuccess = id => {\r\n    setHoaxPage(previousHoaxPage => ({\r\n      ...previousHoaxPage,\r\n      content: previousHoaxPage.content.filter(hoax => hoax.id !== id)\r\n    }));\r\n  };\r\n\r\n  const { content, last } = hoaxPage;\r\n\r\n  if (content.length === 0) {\r\n    return <div className=\"alert alert-secondary text-center\">{initialHoaxLoadProgress ? <Spinner /> : t('There are no hoaxes')}</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {newHoaxCount > 0 && (\r\n        <div\r\n          className=\"alert alert-secondary text-center mb-1\"\r\n          style={{ cursor: loadNewHoaxesProgress ? 'not-allowed' : 'pointer' }}\r\n          onClick={loadNewHoaxesProgress ? () => {} : loadNewHoaxes}\r\n        >\r\n          {loadNewHoaxesProgress ? <Spinner /> : t('There are new hoaxes')}\r\n        </div>\r\n      )}\r\n      {content.map(hoax => {\r\n        return <HoaxView key={hoax.id} hoax={hoax} onDeleteHoax={onDeleteHoaxSuccess} />;\r\n      })}\r\n      {!last && (\r\n        <div\r\n          className=\"alert alert-secondary text-center\"\r\n          style={{ cursor: loadOldHoaxesProgress ? 'not-allowed' : 'pointer' }}\r\n          onClick={loadOldHoaxesProgress ? () => {} : loadOldHoaxes}\r\n        >\r\n          {loadOldHoaxesProgress ? <Spinner /> : t('Load old hoaxes')}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HoaxFeed;","import React from 'react';\r\nimport './AutoUploadImage.css';\r\n\r\nconst AutoUploadImage = ({ image, uploading }) => {\r\n  return (\r\n    <div style={{ position: 'relative' }}>\r\n      <img className=\"img-thumbnail\" src={image} alt=\"hoax-attachment\" />\r\n      <div className=\"overlay\" style={{ opacity: uploading ? 1 : 0 }}>\r\n        <div className=\"d-flex justify-content-center h-100\">\r\n          <div className=\"spinner-border text-light m-auto\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AutoUploadImage;","import React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useSelector } from 'react-redux';\r\nimport ProfileImageWithDefault from './ProfileImageWithDefault';\r\nimport { postHoax, postHoaxAttachment } from '../api/apiCalls';\r\nimport { useApiProgress } from '../shared/ApiProgress';\r\nimport ButtonWithProgress from './ButtonWithProgress';\r\nimport Input from './Input';\r\nimport AutoUploadImage from './AutoUploadImage';\r\n\r\nconst HoaxSubmit = () => {\r\n    const { image } = useSelector((store) => ({image: store.image}))\r\n    const [focused, setFocused]= useState(false);\r\n    const [hoax, setHoax] = useState('');\r\n    const [newImage, setNewImage] = useState();\r\n    const [attachmentId, setAttachmentId] = useState();\r\n    const [errors, setErrors] = useState({});\r\n    const { t } = useTranslation();\r\n\r\n\r\n    useEffect(() => {\r\n        if(!focused) {\r\n            setHoax('');\r\n            setErrors({});\r\n            setNewImage();\r\n            setAttachmentId();\r\n        }\r\n    }, [focused]);\r\n\r\n    useEffect(() => {\r\n        setErrors({});\r\n    }, [hoax]);\r\n\r\n    const pendingApiCall = useApiProgress('post', '/api/1.0/hoaxes', true);\r\n    const pendingFileUpload = useApiProgress('post', '/api/1.0/hoax-attachments', true);\r\n\r\n    const onClickHoaxify = async () => {\r\n        const body ={\r\n            content: hoax,\r\n            attachmentId: attachmentId\r\n        };\r\n        \r\n        try{\r\n            await postHoax(body)\r\n            setFocused(false);\r\n        }catch (error) {\r\n            if(error.response.data.validationErrors){\r\n                setErrors(error.response.data.validationErrors);\r\n            }\r\n        }\r\n    };\r\n    \r\n    const onChangeFile = (event)  => {\r\n        if(event.target.files.length < 1 ) {\r\n            return;\r\n        }\r\n        const file = event.target.files[0];\r\n        const fileReader = new FileReader();\r\n        fileReader.onloadend = () => {\r\n            setNewImage(fileReader.result);\r\n            uploadFile(file);\r\n        }\r\n        fileReader.readAsDataURL(file);\r\n    };\r\n\r\n    const uploadFile = async file => {\r\n        const attachment = new FormData();\r\n        attachment.append('file', file)\r\n        const response = await postHoaxAttachment(attachment);\r\n        setAttachmentId(response.data.id)\r\n    }\r\n\r\n    let textAreaClass = 'form-control';\r\n    if(errors.content) {\r\n        textAreaClass += ' is-invalid';\r\n    }\r\n\r\n    return (\r\n     <div className=\"card p-1 flex-row\" >\r\n         <ProfileImageWithDefault image= {image} width=\"32\" height=\"32\" className=\"rounded-circle mr-1\" />\r\n          <div className=\"flex-fill\">\r\n          <textarea className={textAreaClass} \r\n          rows={focused ? '3' : '1'} \r\n          onFocus={() => setFocused(true)} \r\n          onChange= {(event) => setHoax(event.target.value)}\r\n          value = {hoax}\r\n          />\r\n        <div className=\"invalid-feedback\">{errors.content}</div>\r\n        {focused && (\r\n            <>\r\n            {!newImage && <Input type =\"file\" onChange={onChangeFile}/>}\r\n            {newImage && <AutoUploadImage image={newImage} uploading ={pendingFileUpload}/>}\r\n            <div className=\"text-right mt-1\">\r\n            <ButtonWithProgress className=\"btn btn-primary\" \r\n            onClick={onClickHoaxify}\r\n            text =\"Hoaxify\"\r\n            pendingApiCall = {pendingApiCall}\r\n            disabled = {pendingApiCall || pendingFileUpload}\r\n            />\r\n          <button className= \"btn btn-light d-inline-flex ml-1\" \r\n           onClick={() => setFocused(false)} disabled = {pendingApiCall || pendingFileUpload} >\r\n            <i className= \"material-icons\">close</i> \r\n            {t('Cancel')}\r\n          </button>\r\n        </div>\r\n        </>\r\n        )}\r\n        </div>\r\n     </div>\r\n    );\r\n};\r\n\r\nexport default HoaxSubmit;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport ProfileImageWithDefault from './ProfileImageWithDefault';\r\n\r\nconst UserListItem = props => {\r\n  const { user } = props;\r\n  const { username, displayName, image } = user;\r\n\r\n  return (\r\n    <Link to={`/user/${username}`} className=\"list-group-item list-group-item-action\">\r\n      <ProfileImageWithDefault className=\"rounded-circle\" width=\"32\" height=\"32\" alt={`${username} profile`} image={image} />\r\n      <span className=\"pl-2\">\r\n        {displayName}@{username}\r\n      </span>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default UserListItem;","import React, { useState, useEffect } from 'react';\r\nimport { getUsers } from '../api/apiCalls';\r\nimport { useTranslation } from 'react-i18next';\r\nimport UserListItem from './UserListItem';\r\nimport { useApiProgress } from '../shared/ApiProgress';\r\nimport Spinner from './Spinner';\r\n\r\nconst UserList = () => {\r\n  const [page, setPage] = useState({\r\n    content: [],\r\n    size: 3,\r\n    number: 0\r\n  });\r\n\r\n  const [loadFailure, setLoadFailure] = useState(false);\r\n\r\n  const pendingApiCall = useApiProgress('get', '/api/1.0/users?page');\r\n\r\n  useEffect(() => {\r\n    loadUsers();\r\n  }, []);\r\n\r\n  const onClickNext = () => {\r\n    const nextPage = page.number + 1;\r\n    loadUsers(nextPage);\r\n  };\r\n\r\n  const onClickPrevious = () => {\r\n    const previousPage = page.number - 1;\r\n    loadUsers(previousPage);\r\n  };\r\n\r\n  const loadUsers = async page => {\r\n    setLoadFailure(false);\r\n    try {\r\n      const response = await getUsers(page);\r\n      setPage(response.data);\r\n    } catch (error) {\r\n      setLoadFailure(true);\r\n    }\r\n  };\r\n\r\n  const { t } = useTranslation();\r\n  const { content: users, last, first } = page;\r\n\r\n  let actionDiv = (\r\n    <div>\r\n      {first === false && (\r\n        <button className=\"btn btn-sm btn-light\" onClick={onClickPrevious}>\r\n          {t('Previous')}\r\n        </button>\r\n      )}\r\n      {last === false && (\r\n        <button className=\"btn btn-sm btn-light float-right\" onClick={onClickNext}>\r\n          {t('Next')}\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  if (pendingApiCall) {\r\n    actionDiv = <Spinner />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <h3 className=\"card-header text-center\">{t('Users')}</h3>\r\n      <div className=\"list-group-flush\">\r\n        {users.map(user => (\r\n          <UserListItem key={user.username} user={user} />\r\n        ))}\r\n      </div>\r\n      {actionDiv}\r\n      {loadFailure && <div className=\"text-center text-danger\">{t('Load Failure')}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserList;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport HoaxFeed from '../Components/HoaxFeed';\r\nimport HoaxSubmit from '../Components/HoaxSubmit';\r\nimport UserList from '../Components/UserList';\r\n\r\nconst HomePage = () => {\r\n       const { isLoggedIn } = useSelector(store => ({isLoggedIn: store.isLoggedIn}))\r\n       return (\r\n       <div className=\"container\">\r\n        <div className=\"row\">\r\n         <div className=\"col\">\r\n          {isLoggedIn && (\r\n            <div className=\"mb-1\">\r\n              <HoaxSubmit/>\r\n            </div>\r\n          )}\r\n          <HoaxFeed/>\r\n         </div>\r\n        <div className=\"col\">\r\n              <UserList/>\r\n         </div>\r\n        </div>\r\n       </div>\r\n       );\r\n};\r\n\r\nexport default HomePage;","import React, { useState, useEffect } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport ProfileImageWithDefault from './ProfileImageWithDefault';\r\nimport { useTranslation } from 'react-i18next';\r\nimport Input from './Input';\r\nimport { updateUser, deleteUser } from '../api/apiCalls';\r\nimport { useApiProgress } from '../shared/ApiProgress';\r\nimport ButtonWithProgress from './ButtonWithProgress';\r\nimport { updateSuccess, logoutSuccess } from '../redux/authActions';\r\nimport Modal from './Modal';\r\n\r\nconst ProfileCard = props => {\r\n  const [inEditMode, setInEditMode] = useState(false);\r\n  const [updatedDisplayName, setUpdatedDisplayName] = useState();\r\n  const { username: loggedInUsername } = useSelector(store => ({ username: store.username }));\r\n  const routeParams = useParams();\r\n  const pathUsername = routeParams.username;\r\n  const [user, setUser] = useState({});\r\n  const [editable, setEditable] = useState(false);\r\n  const [newImage, setNewImage] = useState();\r\n  const [validationErrors, setValidationErrors] = useState({});\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    setUser(props.user);\r\n  }, [props.user]);\r\n\r\n  useEffect(() => {\r\n    setEditable(pathUsername === loggedInUsername);\r\n  }, [pathUsername, loggedInUsername]);\r\n\r\n  useEffect(() => {\r\n    setValidationErrors(previousValidationErrors => ({\r\n      ...previousValidationErrors,\r\n      displayName: undefined\r\n    }));\r\n  }, [updatedDisplayName]);\r\n\r\n  useEffect(() => {\r\n    setValidationErrors(previousValidationErrors => ({\r\n      ...previousValidationErrors,\r\n      image: undefined\r\n    }));\r\n  }, [newImage]);\r\n\r\n  const { username, displayName, image } = user;\r\n\r\n  const pendingApiCallDeleteUser = useApiProgress('delete', `/api/1.0/users/${username}`, true);\r\n\r\n  const { t } = useTranslation();\r\n\r\n  useEffect(() => {\r\n    if (!inEditMode) {\r\n      setUpdatedDisplayName(undefined);\r\n      setNewImage(undefined);\r\n    } else {\r\n      setUpdatedDisplayName(displayName);\r\n    }\r\n  }, [inEditMode, displayName]);\r\n\r\n  const onClickSave = async () => {\r\n    let image;\r\n    if (newImage) {\r\n      image = newImage.split(',')[1];\r\n    }\r\n\r\n    const body = {\r\n      displayName: updatedDisplayName,\r\n      image\r\n    };\r\n    try {\r\n      const response = await updateUser(username, body);\r\n      setInEditMode(false);\r\n      setUser(response.data);\r\n      dispatch(updateSuccess(response.data));\r\n    } catch (error) {\r\n      setValidationErrors(error.response.data.validationErrors);\r\n    }\r\n  };\r\n\r\n  const onChangeFile = event => {\r\n    if (event.target.files.length < 1) {\r\n      return;\r\n    }\r\n    const file = event.target.files[0];\r\n    const fileReader = new FileReader();\r\n    fileReader.onloadend = () => {\r\n      setNewImage(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  };\r\n\r\n  const onClickCancel = () => {\r\n    setModalVisible(false);\r\n  };\r\n\r\n  const onClickDeleteUser = async () => {\r\n    await deleteUser(username);\r\n    setModalVisible(false);\r\n    dispatch(logoutSuccess());\r\n    history.push('/');\r\n  };\r\n  const pendingApiCall = useApiProgress('put', '/api/1.0/users/' + username);\r\n\r\n  const { displayName: displayNameError, image: imageError } = validationErrors;\r\n\r\n  return (\r\n    <div className=\"card text-center\">\r\n      <div className=\"card-header\">\r\n        <ProfileImageWithDefault\r\n          className=\"rounded-circle shadow\"\r\n          width=\"200\"\r\n          height=\"200\"\r\n          alt={`${username} profile`}\r\n          image={image}\r\n          tempimage={newImage}\r\n        />\r\n      </div>\r\n      <div className=\"card-body\">\r\n        {!inEditMode && (\r\n          <>\r\n            <h3>\r\n              {displayName}@{username}\r\n            </h3>\r\n            {editable && (\r\n              <>\r\n                <button className=\"btn btn-success d-inline-flex\" onClick={() => setInEditMode(true)}>\r\n                  <i className=\"material-icons\">edit</i>\r\n                  {t('Edit')}\r\n                </button>\r\n                <div className=\"pt-2\">\r\n                  <button className=\"btn btn-danger d-inline-flex\" onClick={() => setModalVisible(true)}>\r\n                    <i className=\"material-icons\">directions_run</i>\r\n                    {t('Delete My Account')}\r\n                  </button>\r\n                </div>\r\n              </>\r\n            )}\r\n          </>\r\n        )}\r\n        {inEditMode && (\r\n          <div>\r\n            <Input\r\n              label={t('Change Display Name')}\r\n              defaultValue={displayName}\r\n              onChange={event => {\r\n                setUpdatedDisplayName(event.target.value);\r\n              }}\r\n              error={displayNameError}\r\n            />\r\n            <Input type=\"file\" onChange={onChangeFile} error={imageError} />\r\n            <div>\r\n              <ButtonWithProgress\r\n                className=\"btn btn-primary d-inline-flex\"\r\n                onClick={onClickSave}\r\n                disabled={pendingApiCall}\r\n                pendingApiCall={pendingApiCall}\r\n                text={\r\n                  <>\r\n                    <i className=\"material-icons\">save</i>\r\n                    {t('Save')}\r\n                  </>\r\n                }\r\n              />\r\n              <button className=\"btn btn-light d-inline-flex ml-1\" onClick={() => setInEditMode(false)} disabled={pendingApiCall}>\r\n                <i className=\"material-icons\">close</i>\r\n                {t('Cancel')}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <Modal\r\n        visible={modalVisible}\r\n        title={t('Delete My Account')}\r\n        okButton={t('Delete My Account')}\r\n        onClickCancel={onClickCancel}\r\n        onClickOk={onClickDeleteUser}\r\n        message={t('Are you sure to delete your account?')}\r\n        pendingApiCall={pendingApiCallDeleteUser}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileCard;","import React, { useEffect, useState } from 'react';\r\nimport ProfileCard from '../Components/ProfileCard';\r\nimport { getUser } from '../api/apiCalls';\r\nimport { useParams } from 'react-router';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useApiProgress} from '../shared/ApiProgress';\r\nimport Spinner from '../Components/Spinner';\r\nimport HoaxFeed from '../Components/HoaxFeed';\r\n\r\nconst UserPage = () => {\r\n    const [user, setUser] = useState({});\r\n    const[notFound, setNotFound] = useState(false) ;\r\n\r\n    const { username } = useParams();\r\n\r\n    const { t } = useTranslation();\r\n\r\n    const pendingApiCall = useApiProgress('get','/api/1.0/users/' + username, true);\r\n\r\n    useEffect(() => {\r\n        setNotFound(false);\r\n    }, [user]);\r\n\r\n    useEffect(() => {\r\n      const loadUser = async () => {\r\n         try {\r\n            const response = await getUser(username);\r\n            setUser(response.data);\r\n\r\n            } catch(error) {\r\n                setNotFound(true);\r\n            }\r\n    };\r\n        loadUser();\r\n    }, [username]);\r\n\r\n    if(notFound) {\r\n        return (\r\n        <div className=\"container\">\r\n            <div className=\"alert alert-danger text-center\">\r\n               <div>\r\n               <i className=\"material-icons\" style= {{fontSize: '48px'}}>error</i>\r\n               </div>\r\n                {t('User Not Found')}\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n\r\n    if(pendingApiCall || user.username !== username ){\r\n        return (\r\n            <Spinner />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className = \"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                <ProfileCard user={user}/>\r\n                </div>\r\n                <div className=\"col\">\r\n                    <HoaxFeed/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserPage;\r\n","export default __webpack_public_path__ + \"static/media/hoaxify.e76cb420.png\";","  \r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport logo from '../assets/hoaxify.png';\r\nimport { Link } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { logoutSuccess } from '../redux/authActions';\r\nimport ProfileImageWithDefault from './ProfileImageWithDefault';\r\n\r\nconst TopBar = props => {\r\n  const { t } = useTranslation();\r\n\r\n  const { username, isLoggedIn, displayName, image } = useSelector(store => ({\r\n    isLoggedIn: store.isLoggedIn,\r\n    username: store.username,\r\n    displayName: store.displayName,\r\n    image: store.image\r\n  }));\r\n\r\n  const menuArea = useRef(null);\r\n\r\n  const [menuVisible, setMenuVisible] = useState(false);\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('click', menuClickTracker);\r\n    return () => {\r\n      document.removeEventListener('click', menuClickTracker);\r\n    };\r\n  }, [isLoggedIn]);\r\n\r\n  const menuClickTracker = event => {\r\n    if (menuArea.current === null || !menuArea.current.contains(event.target)) {\r\n      setMenuVisible(false);\r\n    }\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onLogoutSuccess = () => {\r\n    dispatch(logoutSuccess());\r\n  };\r\n\r\n  let links = (\r\n    <ul className=\"navbar-nav ml-auto\">\r\n      <li>\r\n        <Link className=\"nav-link\" to=\"/login\">\r\n          {t('Login')}\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link className=\"nav-link\" to=\"/signup\">\r\n          {t('Sign Up')}\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  );\r\n  if (isLoggedIn) {\r\n    let dropDownClass = 'dropdown-menu p-0 shadow';\r\n    if (menuVisible) {\r\n      dropDownClass += ' show';\r\n    }\r\n\r\n    links = (\r\n      <ul className=\"navbar-nav ml-auto\" ref={menuArea}>\r\n        <li className=\"nav-item dropdown\">\r\n          <div className=\"d-flex\" style={{ cursor: 'pointer' }} onClick={() => setMenuVisible(true)}>\r\n            <ProfileImageWithDefault image={image} width=\"32\" height=\"32\" className=\"rounded-circle m-auto\" />\r\n            <span className=\"nav-link dropdown-toggle\">{displayName}</span>\r\n          </div>\r\n          <div className={dropDownClass}>\r\n            <Link className=\"dropdown-item d-flex p-2\" to={`/user/${username}`} onClick={() => setMenuVisible(false)}>\r\n              <i className=\"material-icons text-info mr-2\">person</i>\r\n              {t('My Profile')}\r\n            </Link>\r\n            <span className=\"dropdown-item  d-flex p-2\" onClick={onLogoutSuccess} style={{ cursor: 'pointer' }}>\r\n              <i className=\"material-icons text-danger mr-2\">power_settings_new</i>\r\n              {t('Logout')}\r\n            </span>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"shadow-sm bg-light mb-2\">\r\n      <nav className=\"navbar navbar-light container navbar-expand\">\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          <img src={logo} width=\"60\" alt=\"Hoaxify Logo\" />\r\n          Hoaxify\r\n        </Link>\r\n        {links}\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopBar;","import React from 'react';\nimport UserSignupPage from '../Pages/UserSignupPage';\nimport LoginPage from '../Pages/LoginPage';\nimport LanguageSelector from '../Components/LanguageSelector';\nimport HomePage from '../Pages/HomePage';\nimport UserPage from '../Pages/UserPage';\nimport { HashRouter as Router , Route, Redirect, Switch} from 'react-router-dom';\nimport TopBar from '../Components/TopBar';\nimport { useSelector } from 'react-redux';\n\nconst App = () => {\n\n  const { isLoggedIn } = useSelector((store) => ({\n    isLoggedIn: store.isLoggedIn\n  }))\n\n    return (\n      <div >\n        <Router>         \n        <TopBar />\n        <Switch>\n        <Route exact path = \"/\" component={HomePage} />\n        {!isLoggedIn && <Route path = \"/login\" component={LoginPage}\n        />\n    })\n        <Route path = \"/signup\" component={UserSignupPage} />\n        <Route path = \"/user/:username\" component={UserPage} />\n        <Redirect to=\"/\" />\n        </Switch>\n        </Router>\n        <LanguageSelector />\n      </div>\n      );\n\n  }\n\nexport default App;\n","import * as ACTIONS from './Constants';\r\n\r\nconst defaultState = {\r\n  isLoggedIn: false,\r\n  username: undefined,\r\n  displayName: undefined,\r\n  image: undefined,\r\n  password: undefined\r\n};\r\n\r\nconst authReducer = (state = { ...defaultState }, action) => {\r\n  if (action.type === ACTIONS.LOGOUT_SUCCESS) {\r\n    return defaultState;\r\n  } else if (action.type === ACTIONS.LOGIN_SUCCESS) {\r\n    return {\r\n      ...action.payload,\r\n      isLoggedIn: true\r\n    };\r\n  } else if (action.type === ACTIONS.UPDATE_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      ...action.payload\r\n    };\r\n  }\r\n  return state;\r\n};\r\n\r\nexport default authReducer;","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport authReducer from './authReducer';\r\nimport SecureLS from 'secure-ls';\r\nimport { setAuthorizationHeader } from '../api/apiCalls';\r\n\r\nconst secureLS = new SecureLS();\r\n\r\nconst getStateFromStorage = () => {\r\n  const hoaxAuth = secureLS.get('hoax-auth');\r\n      \r\n  let stateInLocalStorage = {\r\n    isLoggedIn: false,\r\n    username: undefined,\r\n    displayName: undefined,\r\n    image: undefined,\r\n    password: undefined\r\n  };\r\n  \r\n  if(hoaxAuth){\r\n     return hoaxAuth;\r\n  }\r\n  return stateInLocalStorage;  \r\n};\r\n\r\nconst updateStateInStorage = newState => {\r\n  secureLS.set('hoax-auth', newState);\r\n};\r\n  const configureStore = () => {\r\n    const initialState = getStateFromStorage();\r\n    setAuthorizationHeader(initialState);\r\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n    const store = createStore( authReducer, initialState, composeEnhancers(applyMiddleware(thunk)));\r\n      \r\n      store.subscribe(() => {\r\n        updateStateInStorage(store.getState());\r\n        setAuthorizationHeader(store.getState());\r\n      });\r\n\r\n      return store;\r\n  };\r\n\r\n  export default configureStore;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './bootstrap-override.scss';\nimport * as serviceWorker from './serviceWorker';\nimport './Pages/i18n';\nimport App from './container/App';\nimport { Provider } from 'react-redux';\nimport configureStore from './redux/configureStore';\n\nconst store = configureStore();\n\nReactDOM.render(\n <Provider store= {store}>\n   <App/>\n </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}